#!/usr/bin/env node
/**
 * @module lb-sdk
 * @description
 * @license MTI
 * 
 * This CLI Tool loads client sdk generators for the selected library
 * currently the only support is for Angular2 but drivers can be
 * selected in order to work in different environments like nativescript
 * and angular unicersal.
 */
var path      = require('path');
var semver    = require('semver');
var optimist  = require('optimist');
var generator = require('loopback-sdk-builder');
/**
 * CLI Options Description
 */
var argv = optimist
  .usage('\n******************************************* LoopBack SDK Builder 2.0.0 *******************************************\n' +
    '\nGenerate Client SDK for your LoopBack Application.' +
    '\nUsage:' +
    '\n    $0 [options] server/app.js [client/js/lb-services.js]')
  .describe('l', 'Client\'s library (angular2, react <todo>, ...)')
  .describe('d', 'Platform specific drivers (ng4web, nativescript2, ng2universal <todo>)')
  .describe('i', 'Enable PubSub functionality for loopback-component-pubsub')
  .default('l', 'angular2')
  .default('d', 'ng4web')
  .default('i', 'disabled')
  .alias({ u : 'url', m: 'module-name', l: 'library', i: 'io', d: 'driver' })
  .demand(1)
  .argv;
/**
 * Set Reference For Main Options
 */
var appFile      = path.resolve(argv._[0]);
var outputFolder = argv._[1];
console.info('Loading LoopBack app %j', appFile);
/**
 * Load and Boot LoopBack Application
 */
var app = require(appFile);
assertLoopBackVersion();
if (app.booting) {
  app.on('booted', runGenerator);
} else {
  runGenerator();
}
/**
 * Generator Logic
 */
function runGenerator() {
  // Default Values
  var context = {
      app          : app,
      framework    : argv['l'] || 'angular2',
      moduleName   : argv['module-name'] || 'sdk',
      apiUrl       : argv['url'] || app.get('restApiRoot') || '/api',
      outputFolder : outputFolder,
      isIo         : argv['i'] || 'disabled',
      driver       : argv['d'] || 'ng4web'
  };     
  // Load Selected Generator
  console.info('Loading Framework %s', context.framework);
  console.error('Generating %j for the API endpoint %j', context.moduleName, context.apiUrl);
  //try {
    generator[context.framework](context);
  //} catch (err) {
  //  throw new Error(err);
  //}
  // The app.js scaffolded by `slc lb project` loads strong-agent module that
  // used to have a bug where it prevented the application from exiting.
  // To work around that issue, we are explicitly exiting here.
  //
  // The exit is deferred to the next tick in order to prevent the Node bug:
  // https://github.com/joyent/node/issues/3584
  process.nextTick(function() {
    process.exit();
  });
}
//--- helpers ---//
function assertLoopBackVersion() {
  var Module = require('module');
  // Load the 'loopback' module in the context of the app.js file,
  // usually from node_modules/loopback of the project of app.js
  var loopback = Module._load('loopback', Module._cache[appFile]);
  if (semver.lt(loopback.version, '1.6.0')) {
    console.error(
      '\nThe code generator does not support applications based\n' +
        'on LoopBack versions older than 1.6.0. Please upgrade your\n' +
        'project to a recent version of LoopBack and run this tool again.\n');
    process.exit(1);
  }
}
